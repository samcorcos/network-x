neo4jUsername = Meteor.settings.neo4j.username
neo4jPassword = Meteor.settings.neo4j.password

Neo4j = new Neo4jDB("http://#{neo4jUsername}:#{neo4jPassword}@networkx.sb05.stations.graphenedb.com:24789")
stringify = Neo4jDB.stringify.bind(Neo4j)

seed = ->
  # Creating people
  console.log "Seeding people..."
  Neo4j.query "MERGE (a:Person {name:'Wilmer Ruperti', tags:['energy'], description:'Businessman involved in oil, shipping, and import/export. He represents Glencore in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Gustavo Pordomo', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Jesus Perez', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Roger Torres', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Donald Ramirez', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Angel Meza', tags:['finance'], description:'Banker', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Juan Domingo Cordero', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Maria A. de Perdomo', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Victor Gill', tags:['finance'], description:'Banker in Venezuela. One of the biggest names in Venezuelan corruption.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Ingrid Anselmi de Frontado', description:'Aunt of Luis Oberto. She is the person who got him the position at the stock exchange.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Orlando Castro Llanes', tags:['finance'], description:'Banker and owner of Grupo Progreso. Busted for money laundering for Pablo Escobar. He is a Venezuelan. Arrested by Morganthau in New York.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Juan Carlos Escotet', tags:['finance'], description:'Banker in Venezuela. Well known among money laundering circles.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Miguel Angel Capriles Cannizaro', tags:['finance'], description:'Businessman involved in media and banking.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Carlo Acosto Lopez', description:'Right hand man of Michu in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Nicolas Maduro', tags:['politics'], description:'President of Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Delcy Rodriguez', tags:['politics'], description:'Minister of Information and Communication. Sister of Jorge Rodriguez, the mayor of Caracas and one of the top Chavistas.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Jorge Rodriguez', tags:['politics'], description:'Mayor of Caracas, former Vice President of Venezuela, and one of the top Chavistas.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Jose Antonio Oliveros Febres Cordero', tags:['finance'], description:'Banker and owner of Banco Activo.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Luis Velasquez Alvaray', tags:['politics'], description:'Former supreme court judge. On record saying he got a phone call from Chavez telling him to rule in favor of Michu.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Jose Vicente Rengel', tags:['politics'], description:'Former Vice President of Venezuela. Possibly the most powerful man in the country.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Emilio Botin', tags:['finance'], description:'Spanish banker who used to run Grupo Santander.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Joseph de Maria', tags:['law'], description:'Legal counsel for a number of Venezuelan criminals.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Eloy Montenegro', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Alejandro Andrade', tags:['politics'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Rafael Sarria', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Hugo Carvajal', tags:['politics'], description:'Politician involved with drug trafficking.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Alejandro Betancourt', tags:['energy', 'finance'], description:'Finance person turned money lanuderer through fake electricity companies.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Francisco Convit', tags:['energy'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Pedro Trebbau Lopez', tags:['energy'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Victor Vargas', tags:['finance'], description:'The Al Capone of Venezuelan money laundering. He is the go-to guy for criminals in Venezuela who want to cut a deal. One of the most powerful men in the country.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Diego Enrique Lepage', tags:['finance'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Francisco D&rsquo;Agostino', tags:['finance', 'energy'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Luis Oberto', tags:['finance'], description:'Banker in New York.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Charles Beaumont', tags:['finance'], description:'Swiss banker who works with a number of criminals in Venezuela to launder their money.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'D.D. Granados', tags:['finance'], description:'Finance person in Venezuela who is immensely wealthy. He is not flashy like most of the other criminals in Venezuela and generally flies under the radar.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Andres Coles', tags:['finance'], description:'New York representative of Davos Bank.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Pedro Rendon Mendoza', tags:['finance'], description:'Director of Quorum management and on the board of Cadena Capriles.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Miguel Angel Capriles Lopez', tags:['media', 'finance', 'politics'], description:'Owner of a media and banking empire in Venezuela. One of the most powerful people in the country and likely the most politically connected.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Enrique Capriles Radonski', tags:['politics'], description:'Leader of the opposition in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Ramon Guuillermo Aveledo', tags:['politics'], description:'Spokesperson for Movement Union Democratica (MUD), the opposition party.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Ramon Jose Medina', tags:['politics'], description:'Person in charge of international relations and strategy for the government. Also in charge of outreach. An employee of Vargas.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Teodoro Petkoff', tags:['media', 'politics'], description:'Editor of Talcual and an intellectual leader of Venezuela, especially among the opposition.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Juan Carlos Zapata', tags:['media'], description:'Created Descifrado as a website to expose corruption, then started accepting money to remove stories. It has since become something of a blackmailing operation.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Morris Beracha', tags:['finance'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Francisco Illarramendi', tags:['finance'], description:'Convicted criminal associated with a huge scandal in 2011. He lost David Osio his license in the United States.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'David Osio', tags:['finance'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Fernando Lauria', tags:['finance'], description:'Fugitive banker from Venezuela who stole approximately $500 million (USD). Lives in Miami. David Osio&rsquo;s brother-in-law.', author:'Simon'})"
  Neo4j.query "MERGE (a:Person {name:'Ricardo Fernandez Barrueco', tags:['foodstuffs'], description:'Owned a food conglomerate given to him by Chavez. Once Chavez nationalized food production, he put Barrueco in charge of the company, making him one of Venezuela&rsquo;s richest men, overnight. He has since been disgraced due to scandal.', author:'Simon'})"

  # Creating companies
  console.log "Seeding companies..."
  Neo4j.query "MERGE (a:Company {name:'Madison Capital Fund LLC', tags:['finance'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Seguros', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Global Shipmanagement', tags:['logistics'], description:'Shipping company owned by Wilmer Ruperti. Ruperti uses this company to manage his ships. Separate from the company that owns the ships.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Suramericana de Transportes de Petroleo', description:'Ship-owning company, owned by Ruperti. Owns millions of dollars worth of cargo ships.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Transfigura', tags:['energy'], description:'Ruperti&rsquo;s commodities trading company. It is a major company and Ruperti is the Latin American representitive.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Glencore', tags:['energy', 'finance'], description:'12th largest company in the Fortune 500. Based in Switzerland, and one of the world&rsquo;s leading commodities companies.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Globovision', tags:['media'], description:'Venezuelan media company', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Almalatina', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Dinerolatino Securities', tags:['finance'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'DI Capital Group', tags:['finance'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'One Allied Fund LLC', tags:['finance'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'One Allied College Park', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Inversora Conivenca', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Seguros La Vitalicia', tags:['finance'], description:'One of the biggest life insurance companies in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Administradora Perad', description:'Administrative services company.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Banco Canarias', tags:['finance'], description:'Bank in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Rowntree Properties', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Dinerolatino Corp.', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'College Inc.', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Rim Group Investments Corp.', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Banco Fondo Común', tags:['finance'], description:'Bank in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Seguros Venezuela', tags:['finance'], description:'Venezuelan insurance company.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Violet Consultants Group', tags:['finance'], description:'Company used for money laundering in the British Virgin Islands/Cayman Islands.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Pague Aqui', tags:['finance'], description:'Payment processing company, owned by Luis Oberto.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Lomas Investments', tags:['finance'], description:'Investment fund in Florida.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Banco Union', tags:['finance'], description:'One of the largest banks in Venezuela. Bought for $400 million (UDS) by Banesco.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Novagalicia Banco', tags:['finance'], description:'Spanish bank, bought by Escotet for $1 billion Euros.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Grupo Progreso', tags:['finance'], description:'Bank, insurance company, and provider of other financial services.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Banesco', tags:['finance'], description:'One of the largest banks in Venezuela. Formerly known as Bancentro.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Bancentro', tags:['finance'], description:'Bank in Venezuela. Purchased by Escotet with the help of Michu. This bank was purchased from the Gill Brothers, then changed its name to Banesco.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Banco Activo', tags:['finance'], description:'Venezuelan bank, run by former partner of Luis Oberto who still owns a significant stake.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Corp Banca', tags:['finance'], description:'Bank in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'La Lechuza Caracas, Inc.', tags:['sports'], description:'The company Victor Vargas created to move around his polo team.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Ultimas Noticias', tags:['media'], description:'Media company with the target audience of the poor. It is the largest newspaper by circulation, probably 10 times bigger than the second largest newspaper. It is a free paper and it is owned by the company Cadena Capriles.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'BC Securities Inc.', tags:['finance'], description:'Panamanian investment fund.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Element Capital', tags:['finance'], description:'Francisco D&rsquo;Agostino&rsquo;s capital management company.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Quorum Management Company', tags:['finance'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Banco Occidental de descuento', tags:['finance'], description:'Bank owned by Victor Vargas.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Derwick Associates', tags:['energy'], description:'Venezuelan energy company involved in money laundering on the order of billions of dollars.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Mirmidones', tags:['finance'], description:'Investment fund in the United States.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Celistic', tags:['logistics'], description:'Logistics firm in Florida.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Movilway', tags:['telecom'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'VADESA', tags:['media'], description:'Parent company that used to own Cadena Capriles.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Cadena Capriles', tags:['media'], description:'Holding company for a newspaper empire.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'El Mundo', tags:['media'], description:'Newspaper similar to Ultimas Noticias that has a target audience of the poor.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Talcual', tags:['media'], description:'Newspaper run by Teodoro Petkoff.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Descifrado', tags:['media'], description:'Website that blackmails criminals and accepts payments to remove stories exposing corruption.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Companie Bancaire Helvetique (CBH)', tags:['finance'], description:'Swiss bank that launders a significant percent of the corrupt money coming out of Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'FTI Consulting', tags:['consulting'], description:'Multinational consulting company that works to protect the reputations of a number of criminals in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Cardenas LLP', tags:['law'], description:'Law firm owned by Al Cardenas. Josep de Maria was the legal counsel for nearly every Venezuelan criminal to be tried in the United States.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Grupo Santander', tags:['finance'], description:'Large Spanish bank.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Banco de Venezuela', tags:['finance'], description:'Was the largest bank in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Davos Bank', tags:['finance'], description:'David Osio&rsquo;s bank. Headquartered in Antigua with offices in the United States.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'KPMG', tags:['finance'], description:'Financial services company based in the United States.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Deloitte', tags:['finance'], description:'Financial services company based in the United States.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Argentus Partners', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'LMN Consulting', description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'PERTRAC Financial Solutions', tags:['finance'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Morgan & Morgan', tags:['law'], description:'Panamanian law firm that works for a number of criminals in Venezuela.', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'STvB Lawyers', tags:['law'], description:'N/A', author:'Simon'})"
  Neo4j.query "MERGE (a:Company {name:'Delta Equity', description:'N/A', author:'Simon'})"

  # Creating 6 jurisdictions: 4 countries, 3 states, 2 cities
  console.log "Seeding jurisdictions..."
  Neo4j.query "MERGE (a:Jurisdiction {name:'United States'})"
  Neo4j.query "MERGE (a:Jurisdiction {name:'Venezuela'})"
  Neo4j.query "MERGE (a:Jurisdiction {name:'Russia'})"
  Neo4j.query "MERGE (a:Jurisdiction {name:'Ukraine'})"
  Neo4j.query "MERGE (a:Jurisdiction {name:'British Virgin Islands'})"
  Neo4j.query "MERGE (a:Jurisdiction {name:'Cayman Islands'})"
  Neo4j.query "MERGE (a:Jurisdiction {name:'Spain'})"
  Neo4j.query "MERGE (a:Jurisdiction {name:'Panama'})"
  Neo4j.query "MERGE (a:Jurisdiction {name:'Switzerland'})"
  Neo4j.query "MERGE (a:Jurisdiction {name:'Antigua'})"

  # Creating organizations
  console.log "Seeding organizations..."
  Neo4j.query "MERGE (a:Organization {name:'Movement Union Democratica (MUD)', tags:['politics'], description:'Opposition party of Venezuela.', author:'Simon'})"

  # Creating edges between all people and their jurisdictions
  console.log "Seeding jurisdiction links..."
  Neo4j.query "MATCH (a:Person {name:'Wilmer Ruperti'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Gustavo Pordomo'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Jesús Pérez'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Roger Torres'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Donald Ramirez'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Ángel Meza'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Juan Domingo Cordero'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Maria A. de Perdomo'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Victor Gill'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Ingrid Anselmi de Frontado'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Orlando Castro Llanes'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Juan Carlos Escotet'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Miguel Angel Capriles Cannizaro'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Carlo Acosto Lopez'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Nicolas Maduro'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Delcy Rodriguez'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Jorge Rodriguez'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Jose Antonio Oliveros Febres Cordero'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Luis Velasquez Alvaray'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Jose Vicente Rengel'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Emilio Botin'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Joseph de Maria'}) MATCH (b:Jurisdiction {name:'United States'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Eloy Montenegro'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Alejandro Andrade'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Rafael Sarria'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Hugo Carvajal'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Alejandro Betancourt'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Francisco Convit'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Pedro Trebbau Lopez'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Victor Vargs'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Diego Enrique Lepage'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Francisco D&rsquo;Agostino'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Luis Oberto'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Charles Beaumont'}) MATCH (b:Jurisdiction {name:'Switzerland'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'D.D. Granados'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Andres Coles'}) MATCH (b:Jurisdiction {name:'United States'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Pedro Rendon Mendoza'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Miguel Angel Capriles Lopez'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Enrique Capriles Radonski'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Ramon Guuillermo Aveledo'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Ramon Jose Medina'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Teodoro Petkoff'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Juan Carlos Zapata'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Morris Beracha'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Francisco Illarramendi'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'David Osio'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Fernando Lauria'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"
  Neo4j.query "MATCH (a:Person {name:'Ricardo Fernandez Barrueco'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:CITIZEN]->(b)"

  # Creating edges between companies and their jurisdictions
  console.log "Seeding company jurisdictions..."
  Neo4j.query "MATCH (a:Company {name:'Seguros'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Global Shipmanagement'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Suramericana de Transportes de Petroleo'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Transfigura'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Globovision'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Almalatina'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Dinerolatino Securities'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Inversora Conivenca'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Seguros La Vitalicia'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Administradora Perad'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Banco Canarias'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Dinerolatino Corp.'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Banco Fondo Común'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Seguros Venezuela'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Violet Consultants Group'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Pague Aqui'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Lomas Investments'}) MATCH (b:Jurisdiction {name:'United States'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Banco Union'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Novagalicia Banco'}) MATCH (b:Jurisdiction {name:'Spain'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Grupo Progreso'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Banesco'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Bancentro'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Banco Activo'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Corp Banca'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'La Lechuza Caracas, Inc.'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Ultimas Noticias'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'BC Securities Inc.'}) MATCH (b:Jurisdiction {name:'Panama'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Quorum Management Company'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Banco Occidental de descuento'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Derwick Associates'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Mirmidones'}) MATCH (b:Jurisdiction {name:'United States'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Celistic'}) MATCH (b:Jurisdiction {name:'United States'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Movilway'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'VADESA'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Cadena Capriles'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'El Mundo'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Talcual'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Descifrado'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Companie Bancaire Helvetique (CBH)'}) MATCH (b:Jurisdiction {name:'Switzerland'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'FTI Consulting'}) MATCH (b:Jurisdiction {name:'United States'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Cardenas LLP'}) MATCH (b:Jurisdiction {name:'United States'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Grupo Santander'}) MATCH (b:Jurisdiction {name:'Spain'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Banco de Venezuela'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Davos Bank'}) MATCH (b:Jurisdiction {name:'Panama'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'KPMG'}) MATCH (b:Jurisdiction {name:'United States'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Deloitte'}) MATCH (b:Jurisdiction {name:'United States'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Argentus Partners'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'LMN Consulting'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'PERTRAC Financial Solutions'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Morgan & Morgan'}) MATCH (b:Jurisdiction {name:'Panama'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'STvB Lawyers'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"
  Neo4j.query "MATCH (a:Company {name:'Delta Equity'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"

  ## Creating organizations and their jurisdictions ##
  console.log "Seeding organization jurisdictions..."
  Neo4j.query "MATCH (a:Organization {name:'Movement Union Democratica (MUD)'}) MATCH (b:Jurisdiction {name:'Venezuela'}) MERGE (a)-[r:LOCATION]->(b)"

  ## Creating "who works for who" edges with regards to people and companies ##
  console.log "Seeding remaining links..."
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)wilmer ruperti' MATCH (b) WHERE b.name =~ '(?i)global shipmanagement' MERGE (a)-[r:OWNS {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)wilmer ruperti' MATCH (b) WHERE b.name =~ '(?i)suramericana de trans.+' MERGE (a)-[r:OWNS {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)wilmer ruperti' MATCH (b) WHERE b.name =~ '(?i)transfigura' MERGE (a)-[r:WORKS_FOR {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)wilmer ruperti' MATCH (b) WHERE b.name =~ '(?i)glencore' MERGE (a)-[r:WORKS_FOR {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)wilmer ruperti' MATCH (b) WHERE b.name =~ '(?i)luis oberto' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)jesus perez' MATCH (b) WHERE b.name =~ '(?i)almalatina' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)jesus perez' MATCH (b) WHERE b.name =~ '(?i)dinerolatino securities' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)jesus perez' MATCH (b) WHERE b.name =~ '(?i)di capital group' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)roger torres' MATCH (b) WHERE b.name =~ '(?i)di capital group' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)donald ramirez' MATCH (b) WHERE b.name =~ '(?i)di capital group' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)gustavo pordomo' MATCH (b) WHERE b.name =~ '(?i)globovision' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)gustavo pordomo' MATCH (b) WHERE b.name =~ '(?i)inversora conive.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)gustavo pordomo' MATCH (b) WHERE b.name =~ '(?i)seguros la vita.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)angel meza' MATCH (b) WHERE b.name =~ '(?i)madison capital.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)angel meza' MATCH (b) WHERE b.name =~ '(?i)one allied fund.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)angel meza' MATCH (b) WHERE b.name =~ '(?i)one allied college.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)juan domingo cordero' MATCH (b) WHERE b.name =~ '(?i)globovision' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)juan domingo cordero' MATCH (b) WHERE b.name =~ '(?i)administradora perad' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)juan domingo cordero' MATCH (b) WHERE b.name =~ '(?i)inversora coni.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)juan domingo cordero' MATCH (b) WHERE b.name =~ '(?i)seguros la vita.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)maria a. de perdomo' MATCH (b) WHERE b.name =~ '(?i)rim group investment.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)luis oberto' MATCH (b) WHERE b.name =~ '(?i)violet consultan.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)luis oberto' MATCH (b) WHERE b.name =~ '(?i)lomas investments' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)luis oberto' MATCH (b) WHERE b.name =~ '(?i)pague aqui' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)ingrid anselmi.+' MATCH (b) WHERE b.name =~ '(?i)pague aqui' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)ingrid anselmi.+' MATCH (b) WHERE b.name =~ '(?i)luis oberto' MERGE (a)-[r:FAMILY {author:'Simon', description:'Aunt of Luis Oberto. She is the person who got him the position at the stock exchange.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)jose antonio oli.+' MATCH (b) WHERE b.name =~ '(?i)banco activo' MERGE (a)-[r:OWNS {author:'Simon', description:'Jose Cordero is the owner of Banco Activo.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)luis oberto' MATCH (b) WHERE b.name =~ '(?i)banco activo' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor gill' MATCH (b) WHERE b.name =~ '(?i)banco fondo.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor vargas' MATCH (b) WHERE b.name =~ '(?i)corp banca' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor vargas' MATCH (b) WHERE b.name =~ '(?i)la lechuza.+' MERGE (a)-[r:OWNS {author:'Simon', description:'Vargas owns this company to move his polo team around the country.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)hugo carvajal' MATCH (b) WHERE b.name =~ '(?i)fti consulting' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'FTI consulting represented Hugo Carvajal and cleaned his reputation online.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)Rafael Sarria' MATCH (b) WHERE b.name =~ '(?i)fti consulting' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)alejandro andrade' MATCH (b) WHERE b.name =~ '(?i)fti consulting' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)ricardo fernandez barrueco' MATCH (b) WHERE b.name =~ '(?i)fti consulting' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)jose luis feaugas' MATCH (b) WHERE b.name =~ '(?i)element capital' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)francisco d.+' MATCH (b) WHERE b.name =~ '(?i)element capital' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)jose luis feaugas' MATCH (b) WHERE b.name =~ '(?i)quorum management company' MERGE (a)-[r:WORKS_FOR {author:'Simon', description:'Jose Luis Feaugas was the initial director of Quorum Management Company.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor vargas' MATCH (b) WHERE b.name =~ '(?i)quorum management company' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)pedro rendon mendoza' MATCH (b) WHERE b.name =~ '(?i)quorum management company' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Pedro Rendon Mendoza is the current director of Quorum Management Company.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)pedro rendon mendoza' MATCH (b) WHERE b.name =~ '(?i)cadena capriles' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Pedro Rendon Mendoza is on the board of Cadena Capriles.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)carlo acosto lopez' MATCH (b) WHERE b.name =~ '(?i)miguel angel capriles lopez' MERGE (a)-[r:WORKS_FOR {author:'Simon', description:'Carlo Acosto Lopez is Michu&rsquo;s right hand man.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)alejandro betan.+' MATCH (b) WHERE b.name =~ '(?i)Derwick associates' MERGE (a)-[r:OWNS {author:'Simon', description:'One of the owners of Derwick Associates.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)Francisco convit' MATCH (b) WHERE b.name =~ '(?i)Derwick associates' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)pedro trebbau lopez' MATCH (b) WHERE b.name =~ '(?i)Derwick associates' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)pedro trebbau lopez' MATCH (b) WHERE b.name =~ '(?i)cardenas.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Pedro Trebbau Lopez is represented by Cardenas LLP.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)eloy montenegro' MATCH (b) WHERE b.name =~ '(?i)cardenas.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Eloy Montenegro is represented by Cardenas LLP.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)ricardo fernandez barrueco' MATCH (b) WHERE b.name =~ '(?i)cardenas.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)joseph de maria' MATCH (b) WHERE b.name =~ '(?i)cardenas.+' MERGE (a)-[r:WORKS_FOR {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)cardenas.+' MATCH (b) WHERE b.name =~ '(?i)derwick associates' MERGE (a)-[r:WORKS_FOR {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)david osio' MATCH (b) WHERE b.name =~ '(?i)cardenas.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)derwick associates' MATCH (b) WHERE b.name =~ '(?i)fti consulting' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)david osio' MATCH (b) WHERE b.name =~ '(?i)fti consulting' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)francisco illarramendi' MATCH (b) WHERE b.name =~ '(?i)fti consulting' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)morris beracha' MATCH (b) WHERE b.name =~ '(?i)fti consulting' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)emilio bo.+' MATCH (b) WHERE b.name =~ '(?i)grupo santander' MERGE (a)-[r:WORKS_FOR {author:'Simon', description:'As far as we know, he is a legitimate businessman who used to run Grupo Santander back when it was involved in Venezuelan acquisitions.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)grupo santander' MATCH (b) WHERE b.name =~ '(?i)banco de venezuela' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)ramon jose medina' MATCH (b) WHERE b.name =~ '(?i)grupo santander' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)ramon jose medina' MATCH (b) WHERE b.name =~ '(?i)movement.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)ramon jose medina' MATCH (b) WHERE b.name =~ '(?i)victor vargas' MERGE (a)-[r:WORKS_FOR {author:'Simon', description:'Ramon Jose Medina is an employee of Victor Vargas.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor vargas' MATCH (b) WHERE b.name =~ '(?i)banco occident.+' MERGE (a)-[r:OWNS {author:'Simon', description:'Victor Vargas owns Banco Occidental de Descuento.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)diego enrique lepage' MATCH (b) WHERE b.name =~ '(?i)banco occident.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)francisco d.+' MATCH (b) WHERE b.name =~ '(?i)banco occident.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)diego enrique lepage' MATCH (b) WHERE b.name =~ '(?i)luis oberto' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)diego enrique lepage' MATCH (b) WHERE b.name =~ '(?i)cadena capriles' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)vadesa' MATCH (b) WHERE b.name =~ '(?i)cadena capriles' MERGE (a)-[r:OWNS {author:'Simon', description:'VADESA is the parent company that used to own Cadena Capriles.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)miguel angel capriles lopez' MATCH (b) WHERE b.name =~ '(?i)vadesa' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)Banco union' MATCH (b) WHERE b.name =~ '(?i)banesco' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Banesco bought Banco Unino for $400 million.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)Novagalicia Banco' MATCH (b) WHERE b.name =~ '(?i)banesco' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Spanish bank bought Banesco for 1 billion Euros.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)orlando castro llanes' MATCH (b) WHERE b.name =~ '(?i)grupo progreso' MERGE (a)-[r:OWNS {author:'Simon', description:'Former owner of Grupo Progreso.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)orlando castro llanes' MATCH (b) WHERE b.name =~ '(?i)juan carlos escotet' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)juan carlos escotet' MATCH (b) WHERE b.name =~ '(?i)grupo progreso' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)Banesco' MATCH (b) WHERE b.name =~ '(?i)bancentro' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Bancentro was a Venezuelan bank purchased by Escotet with the help of Michu. After the purchase, they changed the name to Banesco.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)juan carlos escotet' MATCH (b) WHERE b.name =~ '(?i)banesco' MERGE (a)-[r:OWNS {author:'Simon', description:'Escotet owns Banesco.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)miguel angel capriles lopez' MATCH (b) WHERE b.name =~ '(?i)banesco' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Michu helped Escotet purchase Banesco.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)miguel angel capriles lopez' MATCH (b) WHERE b.name =~ '(?i)juan carlos escotet' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Michu helped Escotet purchase Banesco.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor gill' MATCH (b) WHERE b.name =~ '(?i)bancentro' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Victor Gill was the owner of Bancentro before it was purchased by Michu and Escotet.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor gill' MATCH (b) WHERE b.name =~ '(?i)luis oberto' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor vargas' MATCH (b) WHERE b.name =~ '(?i)francisco d.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor vargas' MATCH (b) WHERE b.name =~ '(?i)derwick associates' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)victor vargas' MATCH (b) WHERE b.name =~ '(?i)banco de venezuela' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)francisco d.+' MATCH (b) WHERE b.name =~ '(?i)derwick associates' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)francisco d.+' MATCH (b) WHERE b.name =~ '(?i)luis oberto' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)luis oberto' MATCH (b) WHERE b.name =~ '(?i)bc securities.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)luis oberto' MATCH (b) WHERE b.name =~ '(?i)mirmidones' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)luis oberto' MATCH (b) WHERE b.name =~ '(?i)charles beaumont' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)charles beaum.+' MATCH (b) WHERE b.name =~ '(?i)companie ban.+' MERGE (a)-[r:WORKS_FOR {author:'Simon', description:'Charles Beaumont is the representative at CBH with whom most people in corruption circles have contact.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)charles beaum.+' MATCH (b) WHERE b.name =~ '(?i)davos bank' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)charles beaum.+' MATCH (b) WHERE b.name =~ '(?i)david osio' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)d\.d\. granados' MATCH (b) WHERE b.name =~ '(?i)david osio' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)andres coles' MATCH (b) WHERE b.name =~ '(?i)davos bank' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Andres Coles is the U.S. representative of Davos Bank.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)companie.+' MATCH (b) WHERE b.name =~ '(?i)davos bank' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)companie.+' MATCH (b) WHERE b.name =~ '(?i)david osio' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)morris beracha' MATCH (b) WHERE b.name =~ '(?i)celistic' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)morris beracha' MATCH (b) WHERE b.name =~ '(?i)movilway' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)morris beracha' MATCH (b) WHERE b.name =~ '(?i)francisco illarr.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)david osio' MATCH (b) WHERE b.name =~ '(?i)francisco illarr.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)david osio' MATCH (b) WHERE b.name =~ '(?i)morris beracha' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)morris beracha' MATCH (b) WHERE b.name =~ '(?i)descifrado' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)fernando lauria' MATCH (b) WHERE b.name =~ '(?i)david osio' MERGE (a)-[r:FAMILY {author:'Simon', description:'Fernando Lauria is David Osio&rsquo;s brother-in-law.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)fernando lauria' MATCH (b) WHERE b.name =~ '(?i)descifrado' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)teodoro petkoff' MATCH (b) WHERE b.name =~ '(?i)juan carlos zapata' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)teodoro petkoff' MATCH (b) WHERE b.name =~ '(?i)Talcual' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)teodoro petkoff' MATCH (b) WHERE b.name =~ '(?i)el mundo' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)juan carlos zapata' MATCH (b) WHERE b.name =~ '(?i)talcual' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)ramon guillermo a.+' MATCH (b) WHERE b.name =~ '(?i)movement union.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Ramon Guillermo Aveledo is the spokesperson for MUD.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)Enrique capriles ra.+' MATCH (b) WHERE b.name =~ '(?i)movement union.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Radonski is the leader of the opposition party, MUD.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)Enrique capriles ra.+' MATCH (b) WHERE b.name =~ '(?i)miguel angel capriles lopez' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)jose vicente rengel' MATCH (b) WHERE b.name =~ '(?i)miguel angel capriles lopez' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)luis velasquez al.+' MATCH (b) WHERE b.name =~ '(?i)miguel angel capriles lopez' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)nicolas maduro' MATCH (b) WHERE b.name =~ '(?i)delcy rodriguez' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)nicolas maduro' MATCH (b) WHERE b.name =~ '(?i)jorge rodriguez' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)delcy rodriguez' MATCH (b) WHERE b.name =~ '(?i)jorge rodriguez' MERGE (a)-[r:FAMILY {author:'Simon', description:'Brother and sister.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)delcy rodriguez' MATCH (b) WHERE b.name =~ '(?i)miguel angel capriles c.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)jorge rodriguez' MATCH (b) WHERE b.name =~ '(?i)miguel angel capriles c.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)jorge rodriguez' MATCH (b) WHERE b.name =~ '(?i)miguel angel capriles l.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)miguel angel capriles l.+' MATCH (b) WHERE b.name =~ '(?i)Cadena Capriles' MERGE (a)-[r:OWNS {author:'Simon', description:'Michu is the owner of Cadena Capriles, the media empire.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)ultimas noticias' MATCH (b) WHERE b.name =~ '(?i)Cadena Capriles' MERGE (a)-[r:OWNS {author:'Simon', description:'Ultimas noticias is owned by the holding company, Cadena Capriles.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)el mundo' MATCH (b) WHERE b.name =~ '(?i)Cadena Capriles' MERGE (a)-[r:OWNS {author:'Simon', description:'El Mundo is owned by the holding company, Cadena Capriles.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)talcual' MATCH (b) WHERE b.name =~ '(?i)Cadena Capriles' MERGE (a)-[r:OWNS {author:'Simon', description:'Talcual is owned by the holding company, Cadena Capriles.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)david osio' MATCH (b) WHERE b.name =~ '(?i)davos bank' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'David Osio owns Davos Bank.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)davos bank' MATCH (b) WHERE b.name =~ '(?i)kpmg' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Davos Bank claims to have them as a partner.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)davos bank' MATCH (b) WHERE b.name =~ '(?i)deloitte' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Davos Bank claims to have them as a partner.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)davos bank' MATCH (b) WHERE b.name =~ '(?i)argentus partners' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Davos Bank claims to have them as a partner.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)davos bank' MATCH (b) WHERE b.name =~ '(?i)lmn consulting' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Davos Bank claims to have them as a partner.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)davos bank' MATCH (b) WHERE b.name =~ '(?i)pertrac fin.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Davos Bank claims to have them as a partner.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)davos bank' MATCH (b) WHERE b.name =~ '(?i)morgan.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Davos Bank claims to have them as a partner.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)davos bank' MATCH (b) WHERE b.name =~ '(?i)stvb law.+' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Davos Bank claims to have them as a partner.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)davos bank' MATCH (b) WHERE b.name =~ '(?i)delta equity' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon', description:'Davos Bank claims to have them as a partner.'}]-(b) RETURN a,b"
  Neo4j.query "MATCH (a) WHERE a.name =~ '(?i)davos bank' MATCH (b) WHERE b.name =~ '(?i)Derwick Associates' MERGE (a)-[r:KNOWN_AFFILIATION {author:'Simon'}]-(b) RETURN a,b"

# Find all the nodes in the database
x = Neo4j.query "MATCH (a) RETURN (a)"

# Determine if there are 0; if so, seed the database
if x.length is 0
  seed()
